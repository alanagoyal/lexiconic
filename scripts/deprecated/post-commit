#!/bin/bash

# Post-commit hook to generate metadata, pronunciations, and embeddings when words.json is modified

# Skip if this is an automated commit from the post-commit hook
if git log -1 --pretty=%B | grep -q "\[skip-post-commit\]"; then
    exit 0
fi

# Get the list of files changed in the last commit
changed_files=$(git diff-tree --no-commit-id --name-only -r HEAD)

# Check if words.json was modified
if echo "$changed_files" | grep -q "public/data/words.json"; then
    echo "üîÑ words.json was modified, running post-commit scripts..."

    # Change to the repository root directory
    cd "$(git rev-parse --show-toplevel)"

    # Generate metadata (phonetics, definitions, family, category, etc.) for new words
    echo "üìã Generating metadata for new words..."
    if [ -z "$BRAINTRUST_API_KEY" ] && [ ! -f ".env.local" ]; then
        echo "‚ö†Ô∏è  BRAINTRUST_API_KEY not found. Skipping metadata generation."
        echo "   Add BRAINTRUST_API_KEY to your .env.local file to enable automatic metadata generation."
    else
        if npx tsx scripts/generate-metadata.ts; then
            echo "‚úÖ Metadata generated successfully"

            # Check if words.json was updated
            if ! git diff --quiet public/data/words.json; then
                echo "üìù Staging updated metadata..."
                git add public/data/words.json
            fi
        else
            echo "‚ö†Ô∏è  Failed to generate metadata (continuing anyway)"
        fi
    fi

    # Generate pronunciations for new/changed words
    echo "üîä Generating pronunciations for new/changed words..."
    if [ -z "$OPENAI_API_KEY" ] && [ ! -f ".env.local" ]; then
        echo "‚ö†Ô∏è  OPENAI_API_KEY not found. Skipping pronunciation generation."
        echo "   Add OPENAI_API_KEY to your .env.local file to enable automatic pronunciation generation."
    else
        if npx tsx scripts/generate-pronunciations.ts; then
            echo "‚úÖ Pronunciations generated successfully"

            # Check if words.json or pronunciation files were updated
            if ! git diff --quiet public/data/words.json public/pronunciations/; then
                echo "üìù Staging updated pronunciation files..."
                git add public/data/words.json public/pronunciations/
            fi
        else
            echo "‚ö†Ô∏è  Failed to generate pronunciations (continuing anyway)"
        fi
    fi

    # Generate embeddings for words with changed semantic fields
    echo "ü§ñ Generating embeddings for words.json..."
    if [ -z "$OPENAI_API_KEY" ] && [ ! -f ".env.local" ]; then
        echo "‚ö†Ô∏è  OPENAI_API_KEY not found. Skipping embedding generation."
        echo "   Add OPENAI_API_KEY to your .env.local file to enable automatic embedding generation."
    else
        if npx tsx scripts/generate-embeddings.ts; then
            echo "‚úÖ Embeddings generated successfully"

            # Check if words-with-embeddings.json was updated
            if ! git diff --quiet public/data/words-with-embeddings.json; then
                echo "üìù Staging updated embeddings..."
                git add public/data/words-with-embeddings.json
            fi
        else
            echo "‚ö†Ô∏è  Failed to generate embeddings (continuing anyway)"
        fi
    fi

    echo "‚ú® Post-commit processing complete"

    # Check if there are any staged files to commit
    if ! git diff --cached --quiet; then
        echo ""
        echo "üìù Auto-committing generated files..."
        git commit -m "chore: update metadata, pronunciations, and embeddings [skip-post-commit]"
        echo "‚úÖ Generated files committed successfully"
    fi
else
    echo "üìÑ words.json was not modified, skipping post-commit scripts"
fi
