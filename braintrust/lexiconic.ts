// This file was automatically generated by braintrust pull. You can
// generate it again by running:
//  $ braintrust pull --project-name "lexiconic"
// Feel free to edit this file manually, but once you do, you should make sure to
// sync your changes with Braintrust by running:
//  $ braintrust push "braintrust/lexiconic.ts"

import braintrust from "braintrust";

const project = braintrust.projects.create({
  id: "f32b966f-8842-49df-bfd1-a3b40e32f08d",
  name: "lexiconic",
});

export const generateUsageNote = project.prompts.create({
  id: "1f6eb030-cb52-460b-900e-471efa04ed4b",
  name: "generate-usage-note",
  slug: "generate-usage-note",
  version: "3e9aa7e0343275bd",
  description: "",
  model: "gpt-5-mini",
  messages: [
    {
      content:
        'Write a very short usage note to explain the the usage of the word "{{input.word}}" in {{input.language}} to someone who speaks English. The usage note should be concise (<20 words) piece of explanatory text that tells the reader how a word is actually used in real life, beyond just its dictionary definition. Your response should start with "Used", for example:\n- "Used teasingly among friends at lakes or the seaside."\n- "Used poetically for loved ones, including children and partners."',
      role: "system",
    },
  ],
  params: {
    use_cache: true,
    temperature: 0,
  },
});

export const generateLocation = project.prompts.create({
  id: "e0668923-7ead-4d89-bfa9-fca1d567c3c0",
  name: "generate-location",
  slug: "generate-location",
  version: "454c8d605e045402",
  description: "",
  model: "gpt-5-mini",
  messages: [
    {
      content:
        "You are a linguistics and toponymy assistant. Given a word and its language, infer the single city or region most likely associated with the word’s origin. If multiple cities are plausible, choose the one with the strongest and most widely accepted association in reliable sources. Do not include country names or extra text. If you are unsure, return the most likely country based on the language.\n\nOutput rules:\n- Return ONLY the city name (e.g., “Athens”).",
      role: "system",
    },
    {
      content: "word: {{input.word}}\nlanguage: {{input.language}}",
      role: "user",
    },
  ],
  params: {
    use_cache: true,
    temperature: 0,
  },
});

export const generateMetadata = project.prompts.create({
  id: "818dd7f3-9fb2-411a-86c6-ed47c0c1b6c5",
  name: "generate-metadata",
  slug: "generate-metadata",
  version: "2d4b9da011d9595f",
  description: "",
  model: "gpt-5",
  messages: [
    {
      content:
        'Given the following word and language:\nWord: {{input.word}}\nLanguage: {{input.language}}\n\nReturn a JSON object with the following fields:\n- word: The input word.\n- language: The language of origin.\n- family: The linguistic family the language belongs to.\n- category: A brief, high-level category for the word’s meaning or usage (e.g., emotion, behavior, humor).\n- definition: A single, one-sentence English definition between 20 and 30 words. Neutral and formal in tone, consistent across all definitions. Provide only the definition, with no extra commentary. Sentence case.\n- literal: The literal or direct translation of the word (if applicable), otherwise an empty string.\n- usage_notes: A very short usage note to explain the the usage of the word. Your response should start with "Used", for example: "Used teasingly among friends at lakes or the seaside."\n- english_approx: The closest English word or phrase (if any).\n- phonetic: The phonetic respelling in English letters (no IPA). Hyphenate syllables and put the primary stressed syllable in ALL CAPS.\n- location: The city or region of origin of the word (e.g. Brazil or France). If you are unsure, return the most likely country based on the language.\n- lat: The latitude of the location.\n- lng: The longitude of the location.\n\nExample output:\n{\n  "word": "jayus",\n  "language": "Indonesian",\n  "family": "Austronesian",\n  "category": "humor/behavior",\n  "definition": "A joke that is so badly told or unfunny that it induces laughter because of its sheer awkwardness or inanity.",\n  "literal": "",\n  "usage_notes": "Used as a dad joke",\n  "english_approx": "dad joke",\n  "phonetic": "JAH-YOOS",\n  "location": "Indonesia",\n  "lat": -6.2088, \n  "lng": 106.8456\n}\n\nReturn your response as the JSON object only, with no additional text.',
      role: "system",
    },
  ],
  params: {
    use_cache: true,
    temperature: 0,
  },
  tools: [
    {
      type: "function",
      function: {
        name: "get_untranslatable_word",
        description:
          "Returns an object describing a single untranslatable word with language, family, category, concise definition, literal translation, usage notes, English approximation, phonetic, location, lat, and lng.",
        parameters: {
          required: [
            "word",
            "language",
            "family",
            "category",
            "definition",
            "literal",
            "usage_notes",
            "english_approx",
            "phonetic",
            "location",
            "lat",
            "lng",
          ],
          properties: {
            word: {
              type: "string",
              description: "The word in its working/script form to display.",
            },
            language: {
              type: "string",
              description: "Language name in English (e.g., 'Japanese').",
            },
            family: {
              type: "string",
              description: "Language family (e.g., 'Japonic').",
            },
            category: {
              type: "string",
              description:
                "Topical category or taxonomy (e.g., 'social/obligation').",
            },
            definition: {
              type: "string",
              description:
                "A single-sentence ~20–30 word definition ending with a period.",
            },
            literal: {
              type: "string",
              description: "Literal translation of the word/phrase.",
            },
            usage_notes: {
              type: "string",
              description:
                "Brief context on when/how it’s used or any social nuance.",
            },
            english_approx: {
              type: "string",
              description: "Closest concise English gloss or phrase.",
            },
            phonetic: {
              type: "string",
              description: "Syllabified/romanized pronunciation.",
            },
            location: {
              type: "string",
              description: "Location of origin.",
            },
            lat: {
              type: "number",
              description: "Latitude of location of origin.",
            },
            lng: {
              type: "number",
              description: "Longitude of location of origin.",
            },
          },
          type: "object",
        },
      },
    },
  ],
});

export const generateDefinition = project.prompts.create({
  id: "43238e07-2c57-41a8-8185-755ac239f29f",
  name: "generate-definition",
  slug: "generate-definition",
  version: "7dd0b6f8592b62ea",
  description: "",
  model: "gpt-5-nano",
  messages: [
    {
      content:
        'You are a lexicographer. Given the word "{{input}}" in {{language}}, write a single, one-sentence English definition.\n\n• Tone: neutral and formal, consistent across all definitions.\n• Length: between 20 and 30 words.\n\nProvide only the definition, with no extra commentary. Sentence case.',
      role: "system",
    },
  ],
  params: {
    use_cache: true,
    temperature: 0,
  },
});

export const generatePhonetic = project.prompts.create({
  id: "08634654-16dd-4479-a612-2e3080aa861f",
  name: "generate-phonetic",
  slug: "generate-phonetic",
  version: "e5075f4c998ad17d",
  description: "",
  model: "gpt-5-mini",
  messages: [
    {
      content:
        "You are a phonetic transcription engine. Given a word, output a user-friendly phonetic respelling in English letters (no IPA).\n\nFormatting rules:\n- Use simple phonetic respelling in standard English letters only (no IPA or diacritics).\n- Hyphenate syllables.\n- Put the primary stressed syllable in ALL CAPS.\n- Keep it brief and readable.\n- Output only the respelling, with no extra text.\n\nExamples:\n- jantelagen → YAHN-teh-lah-gen\n- koselig → KOO-suh-lee\n\nWord: {{input.word}}\nPhonetic spelling:",
      role: "system",
    },
  ],
  params: {
    use_cache: true,
    temperature: 0,
  },
});
